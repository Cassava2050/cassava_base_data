---
title: "Download data from Cassava Base"
author: "Delgado Luis Fernando"
format: 
  html:
    theme: litera
project:
  type: website
  output-dir: docs
---
## Data Download from Cassava Base using QBMS Package

This documentation outlines the process of downloading data from Cassava Base through the use of the QBMS (Query Breeding Management System) package. The QBMS package facilitates the interaction with breeding databases such as BMS (Breeding Management System), BreedBase, and GIGWA through standardized BrAPI calls, enabling the efficient retrieval of both phenotypic and genotypic data.

### Getting Started:
To begin downloading data from Cassava Base, refer to the attached code snippet. This R package is designed to be user-friendly, catering to the specific needs of those involved in the genetic improvement and analysis of crops.

For more information on how to use the QBMS package, visit the GitHub repository: [QBMS on GitHub](https://github.com/icarda-git/QBMS).

## Load packages 

This is where we check to see if all the necessary packages are installed on your computer.

```{r}
## Packages (install)
pkgs <- rownames(installed.packages())

if(!"tidyverse" %in% pkgs) install.packages("tidyverse")
if(!"QBMS" %in% pkgs) install.packages("QBMS")
if(!"here" %in% pkgs) install.packages("here")
```

The code will detect if certain packages are missing from your package library, and if so, will install them automatically.

Now we need to load the packages:

```{r warning=FALSE, message=FALSE}
library(tidyverse)
library(QBMS)
library(here)
```

# Historical Data from Cassava Base

The Cassava program at CIAT has a rich history of conducting various trials. The code snippet provided below offers a straightforward method for downloading this historical data, facilitating easy access to valuable research information.

## Conection with Cassava BreedBase server

```{r}
set_qbms_config("https://cassavabase.org/brapi/v1/calls/",
                path = "", time_out = 300, no_auth = TRUE,
                page_size = 10000,
                engine = "breedbase")
```

## List supported crops in the current bms server

```{r}
list_crops()
```

## Select a crop by name

```{r}
set_crop("Cassava")
```

## List all breeding programs in the selected crop

```{r}
list_programs()
```

## Select the desire breeding program by name

```{r}
set_program("CIAT")
```

## List all year's trial in the selected program

```{r}
trials <- list_trials() %>% pull()
trials
```

Above you can see all the years of the trial that have been carried out by the Cassava program. For the actual example case, we will take the years from 1979 to 2022.

```{r}
trials <- trials[str_starts(trials, "CIAT")] 
trials
trials <- trials[-c(45:47)]
trials
```
## Downloading process 

The download process may take a short or long time depending on the number of trials to be downloaded. 

```{r eval=FALSE}
# FunciÃ³n para procesar cada trial
process_trial <- function(trial) {
  set_trial(trial)
  ontology <- get_trial_obs_ontology()
  STUDIES <- list_studies()
  complete_studies <- STUDIES %>% pull(studyName)
  
  # Utilizar map para iterar sobre complete_studies y obtener datos de cada estudio
  study_data <- map(set_names(complete_studies), ~ {
    set_study(.x)
    get_study_data()
  })
  
  return(study_data)
}

raw_data <- map(trials, process_trial)

# flatten list
raw_data <- flatten(raw_data)
```

## Convert list into a data.frame

```{r eval=FALSE}
all_raw = data.table::rbindlist(raw_data, fill = TRUE) %>% 
  as_tibble() %>%
  filter(observationLevel == "plot")

# dimentions of the entire data set
dim(all_raw)
```

## Save the file in .RDS file 

```{r eval=FALSE}
trial_interest = "hist_raw_data_"

meta_file_name.r = paste("01_", trial_interest,
                         Sys.Date(),".rds", sep = "")
saveRDS(all_raw, file = here::here("data", meta_file_name.r))
```





